// Code generated by ent, DO NOT EDIT.

package jwttoken

const (
	// Label holds the string label denoting the jwttoken type in the database.
	Label = "jwt_token"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldToken holds the string denoting the token field in the database.
	FieldToken = "token"
	// FieldRevoked holds the string denoting the revoked field in the database.
	FieldRevoked = "revoked"
	// FieldClaims holds the string denoting the claims field in the database.
	FieldClaims = "claims"
	// FieldIssuerID holds the string denoting the issuer_id field in the database.
	FieldIssuerID = "issuer_id"
	// EdgeIssuer holds the string denoting the issuer edge name in mutations.
	EdgeIssuer = "issuer"
	// Table holds the table name of the jwttoken in the database.
	Table = "jwt_tokens"
	// IssuerTable is the table that holds the issuer relation/edge.
	IssuerTable = "jwt_tokens"
	// IssuerInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	IssuerInverseTable = "users"
	// IssuerColumn is the table column denoting the issuer relation/edge.
	IssuerColumn = "issuer_id"
)

// Columns holds all SQL columns for jwttoken fields.
var Columns = []string{
	FieldID,
	FieldToken,
	FieldRevoked,
	FieldClaims,
	FieldIssuerID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// TokenValidator is a validator for the "token" field. It is called by the builders before save.
	TokenValidator func(string) error
	// DefaultRevoked holds the default value on creation for the "revoked" field.
	DefaultRevoked bool
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() string
)
